{"name":"RefMasker","tagline":"Hard mask homologies between fasta reference sequences identified by Blastn","body":"---\r\n\r\n**Creation : 2015/06/08**\r\n\r\n**Last update : 2015/06/24**\r\n\r\n---\r\n\r\n## Motivation\r\n\r\nRefMasker is a **python2.7** object oriented script that was developed in order to attribute more correctly short sequencing reads obtained from a mix of reference sequences whose abundance is highly unbalanced. Indeed, a rare reference with sequence homologies with a much frequent reference can result in possible misattributions of reads to the rarest sequence and thus, a large overestimation of this sequence.\r\n\r\n## Principle\r\n\r\n1. Users can generate a template configuration file and fill it according to their requirements. The order of references indicated in the configuration file is **CRITICAL** since it will determine the order in which sequences will be masker thereafter.\r\n2. The configuration file containing all program parameters (including reference fasta location) is parsed and verified for validity.\r\n3. Following the order indicated in the configuration file, reference fasta files are uncompressed (if needed), parsed, and indexed using a memory mapping.\r\n4. An iterative masking is performed, starting from the last reference (**subject**) against all the references listed before (**queries**). For each new iteration the penultimate reference from the previous iteration becomes the **subject** and is removed from the **queries** (see figure below).\r\n5. When the list of queries is empty the iteration stops.\r\n6. Depending of the user requirements, blast and masking reports are generated.\r\n\r\n![RefMasker_iteration](https://raw.githubusercontent.com/a-slide/RefMasker/master/fig/RefMasker_iteration.png)\r\n\r\n**Details of iterations**\r\n    \r\n* Imperfect matches between the subject and the queries are found using a wrapper of NCBI Blast+ ([pyBlast submodule](http://a-slide.github.io/pyBlast))\r\n* If matches were found, the program writes a masked version of the subject reference where each positions of the subject overlapping hits is replaced by a 'N' base (hard masking).\r\n* The subject reference is removed from the reference list.\r\n\r\n## Dependencies\r\n\r\nThe program was developed under Linux Mint 17 and was not tested with other OS.\r\n\r\nIn addition to python2.7 the following dependencies are required for proper program execution:\r\n\r\n* [ncbi blast+](http://blast.ncbi.nlm.nih.gov.gate2.inist.fr/Blast.cgi?PAGE_TYPE=BlastDocs&DOC_TYPE=Download) 2.2.28+\r\n\r\nInstall blast with your favorite package manager (ex: `sudo apt-get install ncbi-blast+`) \r\n\r\n* python package [pyfasta](https://github.com/brentp/pyfasta/) 0.5.2 +\r\n\r\nInstall pip with your favorite package manager and enter the following line to install pyfasta: `sudo pip install pyfasta`\r\n\r\n## Get and install\r\n\r\n* Clone the repository in **recursive mode** to download the main repo and its submodules `git clone --recursive https://github.com/a-slide/RefMasker.git`\r\n\r\n* Enter the src folder of the program folder and make the main script executable `sudo chmod u+x RefMasker.py`\r\n\r\n* Finally, add RefMasker.py to your PATH\r\n\r\n## Usage\r\n\r\nIn the folder where files will be created\r\n\r\n```\r\nUsage: RefMasker.py -c Conf.txt [-i -h]\r\n\r\nOptions:\r\n  --version     show program's version number and exit\r\n  -h, --help    show this help message and exit\r\n  -c CONF_FILE  Path to the configuration file [Mandatory]\r\n  -i            Generate an example configuration file and exit [Facultative]\r\n```\r\n  \r\nAn example configuration file can be generated by running the program with the option -i\r\n\r\nThe possible options are extensively described in the configuration file.\r\n\r\nThe program can be tested from the test folder with the dataset provided and the default configuration file.\r\n\r\n```\r\ncd ./test/result\r\nRefMasker.py -i\r\nRefMasker.py -c Quade_conf_file.txt\r\n```\r\n\r\n## Testings\r\n\r\nThe module can be easily tested thanks to [pytest](http://pytest.org/latest/). It will also test the pyBlast submodule.\r\n\r\n* Install pytest with pip `pip install pytest`\r\n* Run test with py.test-2.7 -v\r\n\r\nExample of output if successful. Please note than some tests might fail due to the random sampling of DNA sequences, and uncertainties of Blastn algorithm.\r\n\r\n```\r\n========================================================================= test session starts =========================================================================\r\nplatform linux2 -- Python 2.7.5 -- py-1.4.27 -- pytest-2.7.0 -- /usr/bin/python\r\nrootdir: /home/adrien/Programming/Python/Refeed/src, inifile: \r\ncollected 39 items \r\n\r\ntest_RefMasker.py::test_Sequence_create PASSED\r\ntest_RefMasker.py::test_Sequence_add_hit[100-seq_0-90-110-0-0--0-0-0-0-] xfail\r\ntest_RefMasker.py::test_Sequence_add_hit[100-seq_1-80-100-0-0--0-0-0-0-] xfail\r\ntest_RefMasker.py::test_Sequence_add_hit[100-seq_0-80-90-20-30-ATCG-79-90-19-30-ATCG] PASSED\r\ntest_RefMasker.py::test_Sequence_add_hit[100-seq_0-90-80-20-30-ATCG-79-90-19-30-CGAT] PASSED\r\ntest_RefMasker.py::test_Sequence_add_hit[100-seq_0-80-90-30-20-ATCG-79-90-19-30-CGAT] PASSED\r\ntest_RefMasker.py::test_Sequence_add_hit[100-seq_0-90-80-30-20-ATCG-79-90-19-30-ATCG] PASSED\r\ntest_RefMasker.py::test_Sequence_output_sequence_1[100-1] PASSED\r\ntest_RefMasker.py::test_Sequence_output_sequence_1[100-5] PASSED\r\ntest_RefMasker.py::test_Sequence_output_sequence_1[200-10] PASSED\r\ntest_RefMasker.py::test_Sequence_output_sequence_2 PASSED\r\ntest_RefMasker.py::test_Reference_create[1-1000-1-False] PASSED\r\ntest_RefMasker.py::test_Reference_create[1-1000-1-True] PASSED\r\ntest_RefMasker.py::test_Reference_create[2-10000-2-False] PASSED\r\ntest_RefMasker.py::test_Reference_create[2-10000-2-True] PASSED\r\ntest_RefMasker.py::test_Reference_add_hit_list[1-1000-1] PASSED\r\ntest_RefMasker.py::test_Reference_add_hit_list[2-10000-2] PASSED\r\ntest_RefMasker.py::test_Reference_output_masked_reference PASSED\r\npyBlast/test_pyBlast.py::test_BlastHit[36.9133828132-88-75-85-47-98-88-14-8.78046725086-92.5815421121] PASSED\r\npyBlast/test_pyBlast.py::test_BlastHit[-1-19-100-17-17-54-53-33-79.1465130808-41.6977101708] xfail\r\npyBlast/test_pyBlast.py::test_BlastHit[65.8976266941--1-46-9-74-59-97-56-59.2270229149-93.0689987714] xfail\r\npyBlast/test_pyBlast.py::test_BlastHit[75.9701897823-71--1-26-16-91-16-82-5.78377016797-79.1291574854] xfail\r\npyBlast/test_pyBlast.py::test_BlastHit[80.9394959784-54-85--1-5-78-33-35-8.3011500976-53.4993883036] xfail\r\npyBlast/test_pyBlast.py::test_BlastHit[35.5821954158-26-23-29--1-69-35-57-47.706286329-4.1842760318] xfail\r\npyBlast/test_pyBlast.py::test_BlastHit[52.9290346724-31-3-44-74--1-30-76-36.6917151434-43.8870409292] xfail\r\npyBlast/test_pyBlast.py::test_BlastHit[16.7597390274-26-0-37-100-15--1-91-89.8637578655-63.9053323995] xfail\r\npyBlast/test_pyBlast.py::test_BlastHit[94.5094431806-49-70-48-9-39-80--1-72.722423521-98.7208732416] xfail\r\npyBlast/test_pyBlast.py::test_BlastHit[44.4349347822-84-83-96-49-59-16-9--1-91.9302274501] xfail\r\npyBlast/test_pyBlast.py::test_BlastHit[77.9794166482-19-89-79-33-46-9-26-21.2569521087--1] xfail\r\npyBlast/test_pyBlast.py::test_Blastn[blastn-Queries from Subject] PASSED\r\npyBlast/test_pyBlast.py::test_Blastn[blastn-Random queries] xfail\r\npyBlast/test_pyBlast.py::test_Blastn[blastn-short-Queries from Subject] PASSED\r\npyBlast/test_pyBlast.py::test_Blastn[blastn-short-Random queries] xfail\r\npyBlast/test_pyBlast.py::test_Blastn[dc-megablast-Queries from Subject] PASSED\r\npyBlast/test_pyBlast.py::test_Blastn[dc-megablast-Random queries] xfail\r\npyBlast/test_pyBlast.py::test_Blastn[megablast-Queries from Subject] PASSED\r\npyBlast/test_pyBlast.py::test_Blastn[megablast-Random queries] xfail\r\npyBlast/test_pyBlast.py::test_Blastn[rmblastn-Queries from Subject] PASSED\r\npyBlast/test_pyBlast.py::test_Blastn[rmblastn-Random queries] xfail\r\n\r\n================================================================ 22 passed, 17 xfailed in 7.02 seconds ================================================================\r\n```\r\n\r\n## Authors and Contact\r\n\r\nAdrien Leger - 2015\r\n\r\n* <adrien.leger@gmail.com> - <adrien.leger@inserm.fr> - <adrien.leger@univ-nantes.fr>\r\n* [a-slide](https://github.com/a-slide) at Github\r\n* [Atlantic Gene Therapies - INSERM 1089](http://www.atlantic-gene-therapies.fr/)\r\n* [Drowned in genomics](http://a-slide.github.io/)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}